generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("REMOTE_DATABASE_URL")
}


model User {
  id            String          @id @default(uuid())
  nickName      String?         @map("nick_name")
  role          Roles
  email         String          @unique
  salt          String
  password      String
  Like          Like[]
  RefreshToken  RefreshToken[]
  TeacherReview TeacherReview[]

  @@map("users")
}


model Teacher {
  id            String          @id @default(uuid())
  fullName      String          @map("full_name")
  photo         String    
  subject       Subject         @relation(fields: [subjectId], references: [id])
  subjectId     String          @map("subjet_id")     
  teacherReview TeacherReview[]

  @@map("teachers")
}

model TeacherReview {
  id           String  @id @default(uuid())
  message      String?
  isChecked    Boolean @map("is_checked")
  freebie      Int
  friendliness Int
  experienced  Int
  strictness   Int
  smartless    Int 
  avgRating    Float @default(0) @map("avg_rating")
  Like         Like[]
  userId       String  @map("user_id")
  user         User    @relation(fields: [userId], references: [id])
  teacher      Teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  teacherId    String  @map("teacher_id")

  @@map("teachers_reviews")

}

model RefreshToken {
  id     String @id @default(uuid())
  token  String
  userId String @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  @@map("refresh_tokens")
}

model Like {
  id              String        @id @default(uuid())
  userId          String
  teacherReviewId String        @map("user_id")
  teacherReview   TeacherReview @relation(fields: [teacherReviewId], references: [id])
  user            User          @relation(fields: [userId], references: [id])

  @@map("likes")
}

model Subject {
  id        String    @id @default(uuid())
  title     String
  createdAt DateTime  @default(now()) @map("created_at")
  teacher   Teacher[] // Один предмет может быть у нескольких учителей
  @@map("subjets")
}

enum Roles {
  ADMIN
  USER
}
